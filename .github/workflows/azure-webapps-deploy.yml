# This workflow builds and deploys a Python Flask app to Azure App Service using a Service Principal and Azure CLI zip deploy.
# It removes the WEBSITE_RUN_FROM_PACKAGE setting and stops using the built-in azure/webapps-deploy action to avoid 409 lock conflicts.

name: Build and deploy Python app to Azure Web App

on:
  push:
    branches: ['main']
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: multi-agent-rl-war    # your Azure Web App name
  AZURE_RESOURCE_GROUP: rg-multi-agent-rl-war  # your Resource Group name
  PYTHON_VERSION: '3.9'                    # Python version

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Package application
        run: |
          zip -r release.zip . -x "venv/*" ".git/*" ".github/*" "__pycache__/*" "*.pyc" "test_env/*" ".DS_Store"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Stop App Service
        run: |
          az webapp stop --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

      - name: Check app settings before removal
        run: |
          echo "Current app settings:"
          az webapp config appsettings list --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "[?name=='WEBSITE_RUN_FROM_PACKAGE']"

      - name: Remove run-from-package setting
        run: |
          az webapp config appsettings delete \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --setting-names WEBSITE_RUN_FROM_PACKAGE
          # Adding a delay to ensure setting is fully removed
          echo "Waiting for setting removal to propagate..."
          sleep 15

      - name: Verify setting removal
        run: |
          echo "Verifying WEBSITE_RUN_FROM_PACKAGE has been removed:"
          az webapp config appsettings list --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "[?name=='WEBSITE_RUN_FROM_PACKAGE']"

      - name: Reset deployment status (optional - use if needed)
        run: |
          # This is a more aggressive approach if normal methods fail
          echo "Resetting SCM site and clearing deployment cache"
          publishingUsername=$(az webapp deployment list-publishing-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --query publishingUserName --output tsv)
          publishingPassword=$(az webapp deployment list-publishing-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --query publishingPassword --output tsv)
          
          # Only continue if we got the credentials
          if [[ ! -z "$publishingUsername" && ! -z "$publishingPassword" ]]; then
            appHostname="${{ env.AZURE_WEBAPP_NAME }}-bga8hpeka0dsbzge.scm.canadacentral-01.azurewebsites.net"
            echo "Using hostname: $appHostname"
            
            # This endpoint resets the SCM site
            curl -X POST "https://${publishingUsername}:${publishingPassword}@${appHostname}/api/diagnostics/restart" || echo "SCM site restart requested"
            
            # Give SCM site time to restart
            sleep 15
          else
            echo "Could not get publishing credentials, skipping SCM site reset"
          fi

      - name: Deploy via Azure CLI ZIP Deploy
        run: |
          az webapp deployment source config-zip \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --src release.zip

      - name: Restart App Service
        run: |
          az webapp start --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

      - name: Verify deployment
        run: |
          echo "App URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net || exit 1
